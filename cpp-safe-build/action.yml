---
name: 'Build Package'
description: 'build a package'

runs:
  using: "composite"
  steps:
    - name: bootstrap
      shell: bash
      if: ${{ env.action_status == '' }}
      run: sh bootstrap.sh

    - name: configure
      id: configure
      shell: bash
      if: ${{ env.action_status == '' }}
      env:
        CXX: ${{ matrix.compiler }}
      run: ./configure
      continue-on-error: true
    - name: get configure_status
      uses: LanguageMachines/ticcactions/get-status@v1
      with:
        the-step: configure
        outcome: ${{ steps.configure.outcome }}
    - name: config.log
      shell: bash
      if: ${{ env.action_status == 'install' }}
      run: cat config.log
    - name: make
      id: make
      shell: bash
      if: ${{ env.action_status == '' }}
      env:
        CXX: ${{ matrix.compiler }}
      run: make -j4
      continue-on-error: true
    - name: get make_status
      uses: LanguageMachines/ticcactions/get-status@v1
      with:
        the-step: make
        outcome: ${{ steps.make.outcome }}
    - name: install
      id: install
      shell: bash
      if: ${{ env.action_status == '' }}
      env:
        CXX: ${{ matrix.compiler }}
      run: sudo make install
      continue-on-error: true
    - name: get install_status
      uses: LanguageMachines/ticcactions/get-status@v1
      with:
        the-step: install
        outcome: ${{ steps.install.outcome }}
    - name: make check
      id: check
      shell: bash
      if: ${{ env.action_status == '' }}
      env:
        CXX: ${{ matrix.compiler }}
        LD_LIBRARY_PATH: $LD_LIBRARY_PATH:/usr/local/lib
      run: make check
      continue-on-error: true
    - name: get check_status
      uses: LanguageMachines/ticcactions/get-status@v1
      with:
        the-step: check
        outcome: ${{ steps.check.outcome }}
    - name: show log
      shell: bash
      if: ${{ env.action_status == 'check' }}
      run: cat src/test-suite.log
      continue-on-error: true
